name: publish agent Docker

on: workflow_dispatch


env:
  AGENT_IMAGE_NAME: metaops/kassette-postgres-agent


jobs:
  build-agent:
    runs-on: self-hosted  

    steps:
    - uses: actions/checkout@v3
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}    

    - name: create latest tag if its the main branch
      if:  ${{ env.RELEASE_VERSION == 'main' }}
      run: echo "DOCKER_TAG=latest" >> $GITHUB_ENV  

    - name: create git tag if its the build uses tag
      if:  ${{ env.RELEASE_VERSION != 'main' }}
      run: echo "DOCKER_TAG=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV  

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20.4
    - run: go version

    - name: cleanup the build files if any
      run: find . -name go.sum -o -name go.mod -delete

    - name: cleanup the build artefacts if any
      run: rm -f kassette-postgres-agent

    - name: Build kassette-postgres-agent
      run: go mod init kassette.ai/kassette-postgres-agent && go mod tidy && go build

    - name: Build docker image for kassete-agent
      run:  docker build . --file Dockerfile --tag ${{ env.AGENT_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

    - name: docker login
      if: github.event_name != 'pull_request'
      run: docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD

    - name: docker push agent
      if: github.event_name != 'pull_request'
      run: docker push ${{ env.AGENT_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

